import java.io.*;
import java.util.Scanner;
import java.util.Arrays;
class prob
{
 public static void main (String args[]) throws IOException
 {
int n,i,j,largest;
 Scanner in = new Scanner(System.in) ;
char ch1,ch2;
String S1,S2;
S1=in.next();
S2=in.next();
int l=S1.length();
int l1=S2.length();
int a[][]=new int[l+1][l1+1];
System.out.println("l"+l+"l1"+l1);
a[0][0]=0;
for(i=1;i<l+1;i++)
{for(j=1;j<l1+1;j++)
{a[i][0]=a[0][j]=0;
}}
for(i=0;i<(l+1);i++)
  { 
for(j=0;j<(l1+1);j++)
{
System.out.print(a[i][j]);
}
System.out.println();
}
for(i=1;i<=l;i++){  
for (j=1;j<=l1;j++){
if (S1.charAt(i-1)==S2.charAt(j-1))
   {
a[i][j] = a[i-1][j-1]+1;
}
else
{
a[i][j]=Math.max(a[i-1][j],a[i][j-1]);
}
}
}
for(i=0;i<(l+1);i++)
  { 
for(j=0;j<(l1+1);j++)
{
System.out.print(a[i][j]);
}
System.out.println();
}
largest=0; 
for(i=0;i<(l+1);i++)
  { 
for(j=0;j<(l1+1);j++)
{
 if (largest < a[i][j])
     largest = a[i][j];
}
}
System.out.println();
System.out.println(largest);
}}


/* to print the longest common subsequence*/
/*public class LongestCommonSubsequence {

    public int lcs(char str1[],char str2[],int len1, int len2){
        
        if(len1 == str1.length || len2 == str2.length){
            return 0;
        }
        if(str1[len1] == str2[len2]){
            return 1 + lcs(str1,str2,len1+1,len2+1);
        }
        else{
            return Math.max(lcs(str1,str2,len1+1,len2),lcs(str1,str2,len1,len2+1));
        }
    }*/
